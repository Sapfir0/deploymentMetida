#!/usr/bin/python3
# -*- coding: utf-8 -*-

# тут маленькая линукс вики

import os

TempofCPUandGPU = "sensors | egrep \"Core|temp|Adapter\" "
TempOfHDD = "sudo hddtemp /dev/sda" #надо понять как поступать с правами админа
    
data = os.popen(TempofCPUandGPU).read()

#print(data)


# Загрузка проца, нужно как-то определить, пока я не сдал физику
loadCpu = "top | egrep \"%Cpu\" "
#data = os.popen(loadCpu).read()
#%Cpu(s):  9,2 us,  2,5 sy,  0,0 ni, 86,4 id,  0,8 wa,  0,0 hi,  1,1 si,  0,0 st
#пример выдаваемой строки
# user(время на процессы юзера), system(системные процессы), niced(не приоритетные процессы юзера), idle(вроемя на простой ядра), 
# в этом случае надо понять как остановить процесс запроса(или взять только текущее значение, а не мониторинг)

#вариант 2
uptime="uptime"
data = os.popen(uptime).read()
# 23:10:39 up  6:19,  1 user,  load average: 1,05, 0,89, 0,79
# load average: 
# Где значения от 0 до 1 указывают на не нагруженную систему близкую к простою.
# Значения от 1 до 10 - как умеренно нагруженную систему. Все нормально.
# Значения от 10 до 30 - как высоконагруженную систему. Не следует добавлять нагрузку. Можно подумать о поиске оптимизации нагрузки. Оптимизация рекомендуется.
# Значения от 30 до 100 - как чрезмерно нагруженную систему, например, причиной может быть большая доля iowait из-за перегрузки - большое количество потоков ввода вывода на одно блочное устройство, аномально медленная работа блочного устройства из-за неисправности, другие подобные причины, связанные с возникновением "бутылочного горлышка" в системе, которое надо расшивать - при таких значениях LA - производительность неэффективная. Оптимизация необходима.
# Значения выше 100 - следует воспринимать как аварийное состоянии системы с точки зрения производительности. Нужно принимать меры безотлагательно.
# Значения выше 1000 - и дальнейший рост LA ведут к падению ядра, как правило, падение системы происходит в течении ближайших нескольких часов. Требуется экстренная реакция для избежания отказа систем и потери данных.
